package main

import (
	"log"
	"sow-market-hub/market" // –£–±–µ–¥–∏—Å—å, —á—Ç–æ –ø—É—Ç—å –ø—Ä–∞–≤–∏–ª—å–Ω—ã–π
)

func main() {
	// --- –ó–ê–ì–†–£–ñ–ê–ï–ú –ö–û–ù–§–ò–ì–£–†–ê–¶–ò–Æ –ò–ó –§–ê–ô–õ–ê config.json ---
	// –í–º–µ—Å—Ç–æ —Ö–∞—Ä–¥–∫–æ–¥–∞, –∏—Å–ø–æ–ª—å–∑—É–µ–º —Ñ—É–Ω–∫—Ü–∏—é loadConfig –∏–∑ –ø–∞–∫–µ—Ç–∞ market
	// config := market.LoadConfig() // –ü—Ä–µ–¥–ø–æ–ª–∞–≥–∞–µ—Ç—Å—è, —á—Ç–æ market.LoadConfig() –ø—É–±–ª–∏—á–Ω–∞ –∏ –∑–∞–≥—Ä—É–∂–∞–µ—Ç config.json

	// –ï—Å–ª–∏ –Ω—É–∂–Ω–æ –Ω–∞—Å—Ç—Ä–æ–∏—Ç—å –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ –¥–ª—è —ç—Ç–æ–≥–æ –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–≥–æ main.go
	// log.SetFlags(log.Ldate | log.Ltime | log.Lshortfile)
	// log.Printf("Loaded config: %+v", config) // –î–ª—è –æ—Ç–ª–∞–¥–∫–∏

	// --- –ó–ê–ö–û–ú–ú–ï–ù–¢–ò–†–û–í–ê–ù–ù–´–ô –ö–û–î –î–õ–Ø –ë–ê–ó –î–ê–ù–ù–´–• ---
	// –≠—Ç–æ—Ç –∫–æ–¥ –≤—ã–∑—ã–≤–∞–ª –ø–∞–Ω–∏–∫—É, —Ç–∞–∫ –∫–∞–∫ Dragonfly/TimescaleDB –Ω–µ –±—ã–ª–∏ –∑–∞–ø—É—â–µ–Ω—ã.
	// listener := market.NewEnhancedMarketListener(config) // –≠—Ç–æ –±–æ–ª—å—à–µ –Ω–µ –Ω—É–∂–Ω–æ –∑–¥–µ—Å—å –Ω–∞–ø—Ä—è–º—É—é

	// writer, err := market.NewTimescaleWriter("localhost:6379", "postgres://postgres:postgres@localhost:5432/timescaledb?sslmode=disable")
	// if err != nil {
	// 	panic(fmt.Sprintf("Failed to create TimescaleDB writer: %v", err))
	// }
	// writer.Start(time.Second * 5)

	// if err := listener.Start(); err != nil {
	// 	panic(fmt.Sprintf("Failed to start enhanced market listener: %v", err))
	// }
	// --- –ö–û–ù–ï–¶ –ó–ê–ö–û–ú–ú–ï–ù–¢–ò–†–û–í–ê–ù–ù–û–ì–û –ö–û–î–ê ---

	// --- –ó–ê–ü–£–°–ö–ê–ï–ú PUBLISHER, –ö–û–¢–û–†–´–ô –ë–£–î–ï–¢ –ü–ò–°–ê–¢–¨ –¢–û–õ–¨–ö–û –í NATS ---
	// –≠—Ç–∞ —Ñ—É–Ω–∫—Ü–∏—è —É–∂–µ –∏—Å–ø–æ–ª—å–∑—É–µ—Ç NewMarketListener() –∏ NewNATSPublisher()
	// –∏ –∑–∞–≥—Ä—É–∂–∞–µ—Ç –∫–æ–Ω—Ñ–∏–≥ –≤–Ω—É—Ç—Ä–∏ —Å–µ–±—è (–µ—Å–ª–∏ LoadConfig() –≤—ã–∑—ã–≤–∞–µ—Ç—Å—è –≤ NewMarketListener).
	// –ï—Å–ª–∏ —Ç—ã —Ö–æ—á–µ—à—å –ø–µ—Ä–µ–¥–∞—Ç—å –∫–æ–Ω–∫—Ä–µ—Ç–Ω—ã–π –∫–æ–Ω—Ñ–∏–≥, —Ç–æ –Ω—É–∂–Ω–æ –±—É–¥–µ—Ç –∏–∑–º–µ–Ω–∏—Ç—å StartListenerWithNATS
	// –∏–ª–∏ —Å–æ–∑–¥–∞—Ç—å –Ω–æ–≤—ã–π wrapper. –ü–æ–∫–∞ –æ—Å—Ç–∞–≤–∏–º –∫–∞–∫ –µ—Å—Ç—å, –æ–Ω –≤–æ–∑—å–º–µ—Ç –¥–µ—Ñ–æ–ª—Ç–Ω—ã–π/–∏–∑ —Ñ–∞–π–ª–∞.
	// log.Println("üöÄ –ó–∞–ø—É—Å–∫ Publisher –≤ NATS...")
	// market.StartListenerWithNATS("nats://31.207.77.179:4222") // –ò—Å–ø–æ–ª—å–∑—É–µ–º —Ç–≤–æ–π NATS URL

	// // –ë–ª–æ–∫–∏—Ä—É–µ–º main –≥–æ—Ä—É—Ç–∏–Ω—É, —á—Ç–æ–±—ã –ø—Ä–æ–≥—Ä–∞–º–º–∞ –Ω–µ –∑–∞–≤–µ—Ä—à–∏–ª–∞—Å—å —Å—Ä–∞–∑—É
	// select {}
	config := market.LoadConfig() // –ó–∞–≥—Ä—É–∑–∫–∞ –∫–æ–Ω—Ñ–∏–≥–∞
	listener := market.NewEnhancedMarketListener(config)

	// --- –û–ë–Ø–ó–ê–¢–ï–õ–¨–ù–û –î–û–ë–ê–í–¨ EnhancedNATSPublisher –∫–∞–∫ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ ---
	natsPublisher, err := market.NewEnhancedNATSPublisher("nats://31.207.77.179:4222")
	if err != nil {
		log.Fatalf("–û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è Enhanced NATS publisher: %v", err)
	}
	listener.AddDataHandler(natsPublisher)
	// -------------------------------------------------------------

	// --- –ò –ó–ê–ü–£–°–¢–ò –ï–ì–û ---
	if err := listener.Start(); err != nil {
		log.Fatalf("–ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞: %v", err)
	}
	select {}

}
